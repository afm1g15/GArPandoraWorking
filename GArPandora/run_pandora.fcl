#NuTools Services
#include "magfield.fcl"
#include "seedservice.fcl"

#GArSoft Services
#include "DetectorClocks.fcl"
#include "DetectorProperties.fcl"
#include "GArProperties.fcl"
#include "ECALProperties.fcl"
#include "Geometry.fcl"
#include "RunHistory.fcl"
#include "BackTracker.fcl"

#Plugins
#include "PandoraInterface.fcl"

process_name: PandoraProc

services:
{
# Load the service that manages root files for histograms.
TFileService:           { fileName: "reco_hist.root" }
TimeTracker:            {}
RandomNumberGenerator:  {} #ART native random number generator
Geometry:               @local::standard_geo
ExptGeoHelperInterface: @local::standard_geometry_helper
DetectorClocks:         @local::standard_clocks
DetectorProperties:     @local::standard_detproperties
GArProperties:          @local::standard_garproperties
ECALProperties:         @local::standard_ecalproperties
NuRandomService:        @local::standard_NuRandomService
MagneticField:          @local::standard_mag_garsoft
BackTracker:            @local::standard_backtracker
#RunHistory:             @local::standard_runhistory
RootGraphicsEnablingService: {}
}


#Start each new event with an empty event.
source:
{
module_type: RootInput
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{

producers:
{
pandora:  @local::standard_pandora
}
analyzers:
{
}

#Define the producer and filter modules for this path, order matters.  Put init 1st!
#Filters reject all following items.  ee lines starting physics.producers below
reco: [ pandora ]

#define the output stream, there could be more than one if using filters
stream1:  [ out1 ]

#trigger_paths is a keyword and contains the paths that modify the ::art::event,
#ie filters and producers
trigger_paths: [ reco ]
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
out1:
{
module_type: RootOutput
fileName:    "reco.root" #default file name, can override from command line with -o or --output
}
}


physics.producers.pandora.PandoraXML: "PandoraSettingsPerfectPFA.xml"
#physics.producers.pandora.PandoraXML: "PandoraSettingsBasic.xml"
physics.producers.pandora.Geant4Label: "geant"
physics.producers.pandora.GeneratorLabel: "generator"
physics.producers.pandora.CaloHitLabel: "sscalohit"
physics.producers.pandora.TrackLabel:   "track"
